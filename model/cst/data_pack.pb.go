// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data_pack.proto

package cst

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgType int32

const (
	MsgType_Login  MsgType = 0
	MsgType_Room   MsgType = 1
	MsgType_Combat MsgType = 2
)

var MsgType_name = map[int32]string{
	0: "Login",
	1: "Room",
	2: "Combat",
}

var MsgType_value = map[string]int32{
	"Login":  0,
	"Room":   1,
	"Combat": 2,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}

func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_75b7bb70114bef35, []int{0}
}

type MsgCmd int32

const (
	MsgCmd_Login_LoginReq  MsgCmd = 0
	MsgCmd_Login_LoginResp MsgCmd = 1
)

var MsgCmd_name = map[int32]string{
	0: "Login_LoginReq",
	1: "Login_LoginResp",
}

var MsgCmd_value = map[string]int32{
	"Login_LoginReq":  0,
	"Login_LoginResp": 1,
}

func (x MsgCmd) String() string {
	return proto.EnumName(MsgCmd_name, int32(x))
}

func (MsgCmd) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_75b7bb70114bef35, []int{1}
}

func init() {
	proto.RegisterEnum("cst.MsgType", MsgType_name, MsgType_value)
	proto.RegisterEnum("cst.MsgCmd", MsgCmd_name, MsgCmd_value)
}

func init() { proto.RegisterFile("data_pack.proto", fileDescriptor_75b7bb70114bef35) }

var fileDescriptor_75b7bb70114bef35 = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x49, 0x2c, 0x49,
	0x8c, 0x2f, 0x48, 0x4c, 0xce, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2e, 0x2e,
	0xd1, 0xd2, 0xe2, 0x62, 0xf7, 0x2d, 0x4e, 0x0f, 0xa9, 0x2c, 0x48, 0x15, 0xe2, 0xe4, 0x62, 0xf5,
	0xc9, 0x4f, 0xcf, 0xcc, 0x13, 0x60, 0x10, 0xe2, 0xe0, 0x62, 0x09, 0xca, 0xcf, 0xcf, 0x15, 0x60,
	0x14, 0xe2, 0xe2, 0x62, 0x73, 0xce, 0xcf, 0x4d, 0x4a, 0x2c, 0x11, 0x60, 0xd2, 0x32, 0xe4, 0x62,
	0xf3, 0x2d, 0x4e, 0x77, 0xce, 0x4d, 0x11, 0x12, 0xe2, 0xe2, 0x03, 0x2b, 0x8d, 0x07, 0x93, 0x41,
	0xa9, 0x85, 0x02, 0x0c, 0x42, 0xc2, 0x5c, 0xfc, 0x28, 0x62, 0xc5, 0x05, 0x02, 0x8c, 0x49, 0x6c,
	0x60, 0xab, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x93, 0x13, 0x20, 0x7d, 0x00, 0x00,
	0x00,
}
